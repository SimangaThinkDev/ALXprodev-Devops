#!/bin/bash

# Define the list of Pokémon names
pokemon_list=("bulbasaur" "ivysaur" "venusaur" "charmander" "charmeleon" "invalid_pokemon" "pikachu") # Added an invalid name to test error handling

# Define the directory to store the data
output_dir="pokemon_data"

# Create the output directory if it doesn't exist
mkdir -p "$output_dir"

# Loop through each Pokémon in the list
for pokemon_name in "${pokemon_list[@]}"
do
    # Specify the API URL
    api_url="https://pokeapi.co/api/v2/pokemon/${pokemon_name}"
    
    # Specify the output file path
    output_file="${output_dir}/${pokemon_name}.json"
    
    # Initialize retry counters
    retries=0
    max_retries=3
    success=false
    
    # Inform the user about the current request
    echo "Fetching data for ${pokemon_name}..."
    
    # --- Retry Mechanism ---
    while [ "$retries" -lt 3 ]; do
        # Make the API request and save the response
        curl -s -f "${api_url}" -o "${output_file}"
        
        # Check the exit status of the curl command
        if [ $? -eq 0 ]; then
            echo "Saved data to ${output_file} ✅"
            success=true
            break # Exit the while loop on success
        else
            retries=$((retries + 1))
            echo "Attempt $retries of $max_retries failed. Retrying in 2 seconds..."
            sleep 2 # Delay before the next retry
        fi
    done
    
    # --- Error Logging ---
    # If the success flag is still false after all retries, log the final error
    if [ "$success" = false ]; then
        echo "Failed to fetch data for ${pokemon_name} after $max_retries attempts. Skipping. ❌"
    fi
    
    # Add a delay between requests to handle API rate limiting
    sleep 1
done
